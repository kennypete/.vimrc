= .vimrc

== linux

My .vimrc, kept updated.  Vim will read a .vimrc symbolic link, so
the easiest means to ensure a clean local repository is to have a "~/vimrc"
folder (i.e., in the same location as the .vimrc used by Vim).  That also
allows for a clean cloned git repository and for easy updating back to github.

== windows

My _vimrc, kept updated.  Techincally it would be possible to run a single
file for my .vimrc and just clone it for Windows.  However, for now it is
kept separate.  For the purposes of this repository, only .vimrc is the name
used but the same content applies, except where indicated.

== sections

I have split my .vimrc into sections:

[horizontal]
01:: The default .vimrc file from B. Moolenaar, copied verbatim but then
modified
+
- Q is not mapped to gq
+
02:: Various additions from different sources (as noted).
+
- mapleader to <Tab>
- many things (_itemise later_)
+
03:: Functions
+
- Code commenting: <leader><space> will comment various file types over the
current or visually selected line(s). including uncommenting where already
commented
- Generate Unicode table with `:GenerateUnicode(first, last)`
+
04:: vimplug
+
- vim-airline and vim-airline-themes
- python-mode
- vim-asciidoctor
- vim-sents (my own authored plugin for substituting entities to/from UTF-8)
+
05:: Window-specific things (only in _vimrc)
+
- a specific WSL change to prevent startup in Replace mode (`set t_u7=`)
- many things specific to windows gvim in a `if has('win32')` command block
+
06 to 10:: [_Reserved for future use._ +
_(perhaps split out 03 too)_]
11:: Airline (i.e., airline plugin) settings/overrides
+
- Theme set to my own ansi_focus theme, run from a fork of vim-airline-themes
that uses a very simple and clean theme with ANSI colours
- Mode map settings to be different to the default, which I left alone when
my pull request to fix modes was accepted
- Specification of separator characters and many other symbols characters
- Turning on the tabline, which displays the buffers that are available, their
status (changed, etc.) as well as their display (file name only) and separator
+
12:: The python-mode (i.e., pymode plugin) additions
+
- Various common settings for python-mode including trimming white-spaces
- Code checking settings, all linting related
- Rope support, i.e., code completion options
- Syntatical settings, which essentially adds formatting for constructs
+
88:: Development area (if used)

== other Vim notes / random stuff

There are numerous learnings on Vim all the time. I continue to record
those in https://github.com/kennypete/md/blob/main/vim.md and will migrate
relevant content into the .vimrc when worthwhile.
